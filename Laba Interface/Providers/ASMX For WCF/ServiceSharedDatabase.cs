//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 
namespace Laba_Interface.ASMX_For_WCF_ProxyClass {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IServiceSharedDatabase", Namespace="http://tempuri.org/")]
    public partial class ServiceSharedDatabase : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTableDistinctOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateColumnOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRowOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteColumnOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRowOperationCompleted;
        
        /// <remarks/>
        public ServiceSharedDatabase() {
            this.Url = "http://localhost:8888/ServiceSharedDatabase.svc";
        }
        
        /// <remarks/>
        public event CreateDatabaseCompletedEventHandler CreateDatabaseCompleted;
        
        /// <remarks/>
        public event CreateTableCompletedEventHandler CreateTableCompleted;
        
        /// <remarks/>
        public event CreateTableDistinctCompletedEventHandler CreateTableDistinctCompleted;
        
        /// <remarks/>
        public event CreateColumnCompletedEventHandler CreateColumnCompleted;
        
        /// <remarks/>
        public event CreateRowCompletedEventHandler CreateRowCompleted;
        
        /// <remarks/>
        public event RenameDatabaseCompletedEventHandler RenameDatabaseCompleted;
        
        /// <remarks/>
        public event RenameTableCompletedEventHandler RenameTableCompleted;
        
        /// <remarks/>
        public event SetValueCompletedEventHandler SetValueCompleted;
        
        /// <remarks/>
        public event GetDatabasesCompletedEventHandler GetDatabasesCompleted;
        
        /// <remarks/>
        public event GetTablesCompletedEventHandler GetTablesCompleted;
        
        /// <remarks/>
        public event GetColumnsCompletedEventHandler GetColumnsCompleted;
        
        /// <remarks/>
        public event DeleteDatabaseCompletedEventHandler DeleteDatabaseCompleted;
        
        /// <remarks/>
        public event DeleteTableCompletedEventHandler DeleteTableCompleted;
        
        /// <remarks/>
        public event DeleteColumnCompletedEventHandler DeleteColumnCompleted;
        
        /// <remarks/>
        public event DeleteRowCompletedEventHandler DeleteRowCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/CreateDatabase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateDatabase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("CreateDatabase", new object[] {
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateDatabase(string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateDatabase", new object[] {
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateDatabase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDatabaseAsync(string name) {
            this.CreateDatabaseAsync(name, null);
        }
        
        /// <remarks/>
        public void CreateDatabaseAsync(string name, object userState) {
            if ((this.CreateDatabaseOperationCompleted == null)) {
                this.CreateDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDatabaseOperationCompleted);
            }
            this.InvokeAsync("CreateDatabase", new object[] {
                        name}, this.CreateDatabaseOperationCompleted, userState);
        }
        
        private void OnCreateDatabaseOperationCompleted(object arg) {
            if ((this.CreateDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDatabaseCompleted(this, new CreateDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/CreateTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateTable([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("CreateTable", new object[] {
                        database,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateTable(string database, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateTable", new object[] {
                        database,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateTable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTableAsync(string database, string name) {
            this.CreateTableAsync(database, name, null);
        }
        
        /// <remarks/>
        public void CreateTableAsync(string database, string name, object userState) {
            if ((this.CreateTableOperationCompleted == null)) {
                this.CreateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTableOperationCompleted);
            }
            this.InvokeAsync("CreateTable", new object[] {
                        database,
                        name}, this.CreateTableOperationCompleted, userState);
        }
        
        private void OnCreateTableOperationCompleted(object arg) {
            if ((this.CreateTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTableCompleted(this, new CreateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/CreateTableDistinct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateTableDistinct([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("CreateTableDistinct", new object[] {
                        database,
                        table,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateTableDistinct(string database, string table, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateTableDistinct", new object[] {
                        database,
                        table,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateTableDistinct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTableDistinctAsync(string database, string table, string name) {
            this.CreateTableDistinctAsync(database, table, name, null);
        }
        
        /// <remarks/>
        public void CreateTableDistinctAsync(string database, string table, string name, object userState) {
            if ((this.CreateTableDistinctOperationCompleted == null)) {
                this.CreateTableDistinctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTableDistinctOperationCompleted);
            }
            this.InvokeAsync("CreateTableDistinct", new object[] {
                        database,
                        table,
                        name}, this.CreateTableDistinctOperationCompleted, userState);
        }
        
        private void OnCreateTableDistinctOperationCompleted(object arg) {
            if ((this.CreateTableDistinctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTableDistinctCompleted(this, new CreateTableDistinctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/CreateColumn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateColumn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type) {
            object[] results = this.Invoke("CreateColumn", new object[] {
                        database,
                        table,
                        name,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateColumn(string database, string table, string name, string type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateColumn", new object[] {
                        database,
                        table,
                        name,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateColumn(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateColumnAsync(string database, string table, string name, string type) {
            this.CreateColumnAsync(database, table, name, type, null);
        }
        
        /// <remarks/>
        public void CreateColumnAsync(string database, string table, string name, string type, object userState) {
            if ((this.CreateColumnOperationCompleted == null)) {
                this.CreateColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateColumnOperationCompleted);
            }
            this.InvokeAsync("CreateColumn", new object[] {
                        database,
                        table,
                        name,
                        type}, this.CreateColumnOperationCompleted, userState);
        }
        
        private void OnCreateColumnOperationCompleted(object arg) {
            if ((this.CreateColumnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateColumnCompleted(this, new CreateColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/CreateRow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateRow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table) {
            this.Invoke("CreateRow", new object[] {
                        database,
                        table});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateRow(string database, string table, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateRow", new object[] {
                        database,
                        table}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateRow(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateRowAsync(string database, string table) {
            this.CreateRowAsync(database, table, null);
        }
        
        /// <remarks/>
        public void CreateRowAsync(string database, string table, object userState) {
            if ((this.CreateRowOperationCompleted == null)) {
                this.CreateRowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRowOperationCompleted);
            }
            this.InvokeAsync("CreateRow", new object[] {
                        database,
                        table}, this.CreateRowOperationCompleted, userState);
        }
        
        private void OnCreateRowOperationCompleted(object arg) {
            if ((this.CreateRowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/RenameDatabase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RenameDatabase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            this.Invoke("RenameDatabase", new object[] {
                        database,
                        name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRenameDatabase(string database, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RenameDatabase", new object[] {
                        database,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRenameDatabase(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void RenameDatabaseAsync(string database, string name) {
            this.RenameDatabaseAsync(database, name, null);
        }
        
        /// <remarks/>
        public void RenameDatabaseAsync(string database, string name, object userState) {
            if ((this.RenameDatabaseOperationCompleted == null)) {
                this.RenameDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameDatabaseOperationCompleted);
            }
            this.InvokeAsync("RenameDatabase", new object[] {
                        database,
                        name}, this.RenameDatabaseOperationCompleted, userState);
        }
        
        private void OnRenameDatabaseOperationCompleted(object arg) {
            if ((this.RenameDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/RenameTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RenameTable([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            this.Invoke("RenameTable", new object[] {
                        database,
                        table,
                        name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRenameTable(string database, string table, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RenameTable", new object[] {
                        database,
                        table,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRenameTable(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void RenameTableAsync(string database, string table, string name) {
            this.RenameTableAsync(database, table, name, null);
        }
        
        /// <remarks/>
        public void RenameTableAsync(string database, string table, string name, object userState) {
            if ((this.RenameTableOperationCompleted == null)) {
                this.RenameTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameTableOperationCompleted);
            }
            this.InvokeAsync("RenameTable", new object[] {
                        database,
                        table,
                        name}, this.RenameTableOperationCompleted, userState);
        }
        
        private void OnRenameTableOperationCompleted(object arg) {
            if ((this.RenameTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/SetValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetValue([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string column, int row, [System.Xml.Serialization.XmlIgnoreAttribute()] bool rowSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string value) {
            this.Invoke("SetValue", new object[] {
                        database,
                        table,
                        column,
                        row,
                        rowSpecified,
                        value});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetValue(string database, string table, string column, int row, bool rowSpecified, string value, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetValue", new object[] {
                        database,
                        table,
                        column,
                        row,
                        rowSpecified,
                        value}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetValue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetValueAsync(string database, string table, string column, int row, bool rowSpecified, string value) {
            this.SetValueAsync(database, table, column, row, rowSpecified, value, null);
        }
        
        /// <remarks/>
        public void SetValueAsync(string database, string table, string column, int row, bool rowSpecified, string value, object userState) {
            if ((this.SetValueOperationCompleted == null)) {
                this.SetValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetValueOperationCompleted);
            }
            this.InvokeAsync("SetValue", new object[] {
                        database,
                        table,
                        column,
                        row,
                        rowSpecified,
                        value}, this.SetValueOperationCompleted, userState);
        }
        
        private void OnSetValueOperationCompleted(object arg) {
            if ((this.SetValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/GetDatabases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF", IsNullable=false)]
        public KeyValuePairOfstringDatabaseDataDfSOYfAC[] GetDatabases() {
            object[] results = this.Invoke("GetDatabases", new object[0]);
            return ((KeyValuePairOfstringDatabaseDataDfSOYfAC[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDatabases(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDatabases", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public KeyValuePairOfstringDatabaseDataDfSOYfAC[] EndGetDatabases(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((KeyValuePairOfstringDatabaseDataDfSOYfAC[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabasesAsync() {
            this.GetDatabasesAsync(null);
        }
        
        /// <remarks/>
        public void GetDatabasesAsync(object userState) {
            if ((this.GetDatabasesOperationCompleted == null)) {
                this.GetDatabasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabasesOperationCompleted);
            }
            this.InvokeAsync("GetDatabases", new object[0], this.GetDatabasesOperationCompleted, userState);
        }
        
        private void OnGetDatabasesOperationCompleted(object arg) {
            if ((this.GetDatabasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabasesCompleted(this, new GetDatabasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/GetTables", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF", IsNullable=false)]
        public KeyValuePairOfstringTableDataDfSOYfAC[] GetTables([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database) {
            object[] results = this.Invoke("GetTables", new object[] {
                        database});
            return ((KeyValuePairOfstringTableDataDfSOYfAC[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTables(string database, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTables", new object[] {
                        database}, callback, asyncState);
        }
        
        /// <remarks/>
        public KeyValuePairOfstringTableDataDfSOYfAC[] EndGetTables(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((KeyValuePairOfstringTableDataDfSOYfAC[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTablesAsync(string database) {
            this.GetTablesAsync(database, null);
        }
        
        /// <remarks/>
        public void GetTablesAsync(string database, object userState) {
            if ((this.GetTablesOperationCompleted == null)) {
                this.GetTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTablesOperationCompleted);
            }
            this.InvokeAsync("GetTables", new object[] {
                        database}, this.GetTablesOperationCompleted, userState);
        }
        
        private void OnGetTablesOperationCompleted(object arg) {
            if ((this.GetTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTablesCompleted(this, new GetTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/GetColumns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF", IsNullable=false)]
        public KeyValuePairOfstringColumnDfSOYfAC[] GetColumns([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table) {
            object[] results = this.Invoke("GetColumns", new object[] {
                        database,
                        table});
            return ((KeyValuePairOfstringColumnDfSOYfAC[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetColumns(string database, string table, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetColumns", new object[] {
                        database,
                        table}, callback, asyncState);
        }
        
        /// <remarks/>
        public KeyValuePairOfstringColumnDfSOYfAC[] EndGetColumns(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((KeyValuePairOfstringColumnDfSOYfAC[])(results[0]));
        }
        
        /// <remarks/>
        public void GetColumnsAsync(string database, string table) {
            this.GetColumnsAsync(database, table, null);
        }
        
        /// <remarks/>
        public void GetColumnsAsync(string database, string table, object userState) {
            if ((this.GetColumnsOperationCompleted == null)) {
                this.GetColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnsOperationCompleted);
            }
            this.InvokeAsync("GetColumns", new object[] {
                        database,
                        table}, this.GetColumnsOperationCompleted, userState);
        }
        
        private void OnGetColumnsOperationCompleted(object arg) {
            if ((this.GetColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColumnsCompleted(this, new GetColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/DeleteDatabase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDatabase([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database) {
            this.Invoke("DeleteDatabase", new object[] {
                        database});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDatabase(string database, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDatabase", new object[] {
                        database}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteDatabase(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteDatabaseAsync(string database) {
            this.DeleteDatabaseAsync(database, null);
        }
        
        /// <remarks/>
        public void DeleteDatabaseAsync(string database, object userState) {
            if ((this.DeleteDatabaseOperationCompleted == null)) {
                this.DeleteDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDatabaseOperationCompleted);
            }
            this.InvokeAsync("DeleteDatabase", new object[] {
                        database}, this.DeleteDatabaseOperationCompleted, userState);
        }
        
        private void OnDeleteDatabaseOperationCompleted(object arg) {
            if ((this.DeleteDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/DeleteTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTable([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table) {
            this.Invoke("DeleteTable", new object[] {
                        database,
                        table});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteTable(string database, string table, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteTable", new object[] {
                        database,
                        table}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteTable(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteTableAsync(string database, string table) {
            this.DeleteTableAsync(database, table, null);
        }
        
        /// <remarks/>
        public void DeleteTableAsync(string database, string table, object userState) {
            if ((this.DeleteTableOperationCompleted == null)) {
                this.DeleteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTableOperationCompleted);
            }
            this.InvokeAsync("DeleteTable", new object[] {
                        database,
                        table}, this.DeleteTableOperationCompleted, userState);
        }
        
        private void OnDeleteTableOperationCompleted(object arg) {
            if ((this.DeleteTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/DeleteColumn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteColumn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string column) {
            this.Invoke("DeleteColumn", new object[] {
                        database,
                        table,
                        column});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteColumn(string database, string table, string column, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteColumn", new object[] {
                        database,
                        table,
                        column}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteColumn(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteColumnAsync(string database, string table, string column) {
            this.DeleteColumnAsync(database, table, column, null);
        }
        
        /// <remarks/>
        public void DeleteColumnAsync(string database, string table, string column, object userState) {
            if ((this.DeleteColumnOperationCompleted == null)) {
                this.DeleteColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteColumnOperationCompleted);
            }
            this.InvokeAsync("DeleteColumn", new object[] {
                        database,
                        table,
                        column}, this.DeleteColumnOperationCompleted, userState);
        }
        
        private void OnDeleteColumnOperationCompleted(object arg) {
            if ((this.DeleteColumnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteColumnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceSharedDatabase/DeleteRow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string database, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string table, int row, [System.Xml.Serialization.XmlIgnoreAttribute()] bool rowSpecified) {
            this.Invoke("DeleteRow", new object[] {
                        database,
                        table,
                        row,
                        rowSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteRow(string database, string table, int row, bool rowSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteRow", new object[] {
                        database,
                        table,
                        row,
                        rowSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteRow(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteRowAsync(string database, string table, int row, bool rowSpecified) {
            this.DeleteRowAsync(database, table, row, rowSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteRowAsync(string database, string table, int row, bool rowSpecified, object userState) {
            if ((this.DeleteRowOperationCompleted == null)) {
                this.DeleteRowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRowOperationCompleted);
            }
            this.InvokeAsync("DeleteRow", new object[] {
                        database,
                        table,
                        row,
                        rowSpecified}, this.DeleteRowOperationCompleted, userState);
        }
        
        private void OnDeleteRowOperationCompleted(object arg) {
            if ((this.DeleteRowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public partial class KeyValuePairOfstringDatabaseDataDfSOYfAC {
        
        private string keyField;
        
        private DatabaseData valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DatabaseData Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public partial class DatabaseData {
        
        private string nameField;
        
        private int tablesField;
        
        private bool tablesFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Tables {
            get {
                return this.tablesField;
            }
            set {
                this.tablesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TablesSpecified {
            get {
                return this.tablesFieldSpecified;
            }
            set {
                this.tablesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public partial class Value {
        
        private string dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public partial class Column {
        
        private string nameField;
        
        private string typeField;
        
        private Value[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Value[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public partial class KeyValuePairOfstringColumnDfSOYfAC {
        
        private string keyField;
        
        private Column valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Column Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public partial class TableData {
        
        private int columnsField;
        
        private bool columnsFieldSpecified;
        
        private string nameField;
        
        private int rowsField;
        
        private bool rowsFieldSpecified;
        
        /// <remarks/>
        public int Columns {
            get {
                return this.columnsField;
            }
            set {
                this.columnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnsSpecified {
            get {
                return this.columnsFieldSpecified;
            }
            set {
                this.columnsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowsSpecified {
            get {
                return this.rowsFieldSpecified;
            }
            set {
                this.rowsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public partial class KeyValuePairOfstringTableDataDfSOYfAC {
        
        private string keyField;
        
        private TableData valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TableData Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void CreateDatabaseCompletedEventHandler(object sender, CreateDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void CreateTableCompletedEventHandler(object sender, CreateTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void CreateTableDistinctCompletedEventHandler(object sender, CreateTableDistinctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTableDistinctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTableDistinctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void CreateColumnCompletedEventHandler(object sender, CreateColumnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void CreateRowCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void RenameDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void RenameTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void SetValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetDatabasesCompletedEventHandler(object sender, GetDatabasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValuePairOfstringDatabaseDataDfSOYfAC[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePairOfstringDatabaseDataDfSOYfAC[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetTablesCompletedEventHandler(object sender, GetTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValuePairOfstringTableDataDfSOYfAC[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePairOfstringTableDataDfSOYfAC[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetColumnsCompletedEventHandler(object sender, GetColumnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValuePairOfstringColumnDfSOYfAC[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePairOfstringColumnDfSOYfAC[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DeleteDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DeleteTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DeleteColumnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DeleteRowCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
