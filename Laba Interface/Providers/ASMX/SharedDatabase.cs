//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 
namespace Laba_Interface.ASMX_ProxyClass
{
	using System;
	using System.Web.Services;
	using System.Diagnostics;
	using System.Web.Services.Protocols;
	using System.Xml.Serialization;
	using System.ComponentModel;


	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name = "SharedDatabaseSoap", Namespace = "http://microsoft.com/webservices/")]
	public partial class SharedDatabase : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback CreateDatabaseOperationCompleted;

		private System.Threading.SendOrPostCallback CreateTableOperationCompleted;

		private System.Threading.SendOrPostCallback CreateTableDistinctOperationCompleted;

		private System.Threading.SendOrPostCallback CreateColumnOperationCompleted;

		private System.Threading.SendOrPostCallback CreateRowOperationCompleted;

		private System.Threading.SendOrPostCallback RenameDatabaseOperationCompleted;

		private System.Threading.SendOrPostCallback RenameTableOperationCompleted;

		private System.Threading.SendOrPostCallback SetValueOperationCompleted;

		private System.Threading.SendOrPostCallback GetDatabasesOperationCompleted;

		private System.Threading.SendOrPostCallback GetTablesOperationCompleted;

		private System.Threading.SendOrPostCallback GetColumnsOperationCompleted;

		private System.Threading.SendOrPostCallback DeleteDatabaseOperationCompleted;

		private System.Threading.SendOrPostCallback DeleteTableOperationCompleted;

		private System.Threading.SendOrPostCallback DeleteColumnOperationCompleted;

		private System.Threading.SendOrPostCallback DeleteRowOperationCompleted;

		/// <remarks/>
		public SharedDatabase()
		{
			this.Url = "http://localhost:7777/SharedDatabase.asmx";
		}

		/// <remarks/>
		public event CreateDatabaseCompletedEventHandler CreateDatabaseCompleted;

		/// <remarks/>
		public event CreateTableCompletedEventHandler CreateTableCompleted;

		/// <remarks/>
		public event CreateTableDistinctCompletedEventHandler CreateTableDistinctCompleted;

		/// <remarks/>
		public event CreateColumnCompletedEventHandler CreateColumnCompleted;

		/// <remarks/>
		public event CreateRowCompletedEventHandler CreateRowCompleted;

		/// <remarks/>
		public event RenameDatabaseCompletedEventHandler RenameDatabaseCompleted;

		/// <remarks/>
		public event RenameTableCompletedEventHandler RenameTableCompleted;

		/// <remarks/>
		public event SetValueCompletedEventHandler SetValueCompleted;

		/// <remarks/>
		public event GetDatabasesCompletedEventHandler GetDatabasesCompleted;

		/// <remarks/>
		public event GetTablesCompletedEventHandler GetTablesCompleted;

		/// <remarks/>
		public event GetColumnsCompletedEventHandler GetColumnsCompleted;

		/// <remarks/>
		public event DeleteDatabaseCompletedEventHandler DeleteDatabaseCompleted;

		/// <remarks/>
		public event DeleteTableCompletedEventHandler DeleteTableCompleted;

		/// <remarks/>
		public event DeleteColumnCompletedEventHandler DeleteColumnCompleted;

		/// <remarks/>
		public event DeleteRowCompletedEventHandler DeleteRowCompleted;

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/CreateDatabase", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string CreateDatabase(string name)
		{
			object[] results = this.Invoke("CreateDatabase", new object[] {
						name});
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginCreateDatabase(string name, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CreateDatabase", new object[] {
						name}, callback, asyncState);
		}

		/// <remarks/>
		public string EndCreateDatabase(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void CreateDatabaseAsync(string name)
		{
			this.CreateDatabaseAsync(name, null);
		}

		/// <remarks/>
		public void CreateDatabaseAsync(string name, object userState)
		{
			if ((this.CreateDatabaseOperationCompleted == null))
			{
				this.CreateDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDatabaseOperationCompleted);
			}
			this.InvokeAsync("CreateDatabase", new object[] {
						name}, this.CreateDatabaseOperationCompleted, userState);
		}

		private void OnCreateDatabaseOperationCompleted(object arg)
		{
			if ((this.CreateDatabaseCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.CreateDatabaseCompleted(this, new CreateDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/CreateTable", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string CreateTable(string database, string name)
		{
			object[] results = this.Invoke("CreateTable", new object[] {
						database,
						name});
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginCreateTable(string database, string name, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CreateTable", new object[] {
						database,
						name}, callback, asyncState);
		}

		/// <remarks/>
		public string EndCreateTable(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void CreateTableAsync(string database, string name)
		{
			this.CreateTableAsync(database, name, null);
		}

		/// <remarks/>
		public void CreateTableAsync(string database, string name, object userState)
		{
			if ((this.CreateTableOperationCompleted == null))
			{
				this.CreateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTableOperationCompleted);
			}
			this.InvokeAsync("CreateTable", new object[] {
						database,
						name}, this.CreateTableOperationCompleted, userState);
		}

		private void OnCreateTableOperationCompleted(object arg)
		{
			if ((this.CreateTableCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.CreateTableCompleted(this, new CreateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/CreateTableDistinct", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string CreateTableDistinct(string database, string table, string name)
		{
			object[] results = this.Invoke("CreateTableDistinct", new object[] {
						database,
						table,
						name});
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginCreateTableDistinct(string database, string table, string name, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CreateTableDistinct", new object[] {
						database,
						table,
						name}, callback, asyncState);
		}

		/// <remarks/>
		public string EndCreateTableDistinct(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void CreateTableDistinctAsync(string database, string table, string name)
		{
			this.CreateTableDistinctAsync(database, table, name, null);
		}

		/// <remarks/>
		public void CreateTableDistinctAsync(string database, string table, string name, object userState)
		{
			if ((this.CreateTableDistinctOperationCompleted == null))
			{
				this.CreateTableDistinctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTableDistinctOperationCompleted);
			}
			this.InvokeAsync("CreateTableDistinct", new object[] {
						database,
						table,
						name}, this.CreateTableDistinctOperationCompleted, userState);
		}

		private void OnCreateTableDistinctOperationCompleted(object arg)
		{
			if ((this.CreateTableDistinctCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.CreateTableDistinctCompleted(this, new CreateTableDistinctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/CreateColumn", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string CreateColumn(string database, string table, string name, string type)
		{
			object[] results = this.Invoke("CreateColumn", new object[] {
						database,
						table,
						name,
						type});
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginCreateColumn(string database, string table, string name, string type, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CreateColumn", new object[] {
						database,
						table,
						name,
						type}, callback, asyncState);
		}

		/// <remarks/>
		public string EndCreateColumn(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void CreateColumnAsync(string database, string table, string name, string type)
		{
			this.CreateColumnAsync(database, table, name, type, null);
		}

		/// <remarks/>
		public void CreateColumnAsync(string database, string table, string name, string type, object userState)
		{
			if ((this.CreateColumnOperationCompleted == null))
			{
				this.CreateColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateColumnOperationCompleted);
			}
			this.InvokeAsync("CreateColumn", new object[] {
						database,
						table,
						name,
						type}, this.CreateColumnOperationCompleted, userState);
		}

		private void OnCreateColumnOperationCompleted(object arg)
		{
			if ((this.CreateColumnCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.CreateColumnCompleted(this, new CreateColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/CreateRow", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void CreateRow(string database, string table)
		{
			this.Invoke("CreateRow", new object[] {
						database,
						table});
		}

		/// <remarks/>
		public System.IAsyncResult BeginCreateRow(string database, string table, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CreateRow", new object[] {
						database,
						table}, callback, asyncState);
		}

		/// <remarks/>
		public void EndCreateRow(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void CreateRowAsync(string database, string table)
		{
			this.CreateRowAsync(database, table, null);
		}

		/// <remarks/>
		public void CreateRowAsync(string database, string table, object userState)
		{
			if ((this.CreateRowOperationCompleted == null))
			{
				this.CreateRowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRowOperationCompleted);
			}
			this.InvokeAsync("CreateRow", new object[] {
						database,
						table}, this.CreateRowOperationCompleted, userState);
		}

		private void OnCreateRowOperationCompleted(object arg)
		{
			if ((this.CreateRowCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.CreateRowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/RenameDatabase", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RenameDatabase(string database, string name)
		{
			this.Invoke("RenameDatabase", new object[] {
						database,
						name});
		}

		/// <remarks/>
		public System.IAsyncResult BeginRenameDatabase(string database, string name, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RenameDatabase", new object[] {
						database,
						name}, callback, asyncState);
		}

		/// <remarks/>
		public void EndRenameDatabase(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void RenameDatabaseAsync(string database, string name)
		{
			this.RenameDatabaseAsync(database, name, null);
		}

		/// <remarks/>
		public void RenameDatabaseAsync(string database, string name, object userState)
		{
			if ((this.RenameDatabaseOperationCompleted == null))
			{
				this.RenameDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameDatabaseOperationCompleted);
			}
			this.InvokeAsync("RenameDatabase", new object[] {
						database,
						name}, this.RenameDatabaseOperationCompleted, userState);
		}

		private void OnRenameDatabaseOperationCompleted(object arg)
		{
			if ((this.RenameDatabaseCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.RenameDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/RenameTable", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RenameTable(string database, string table, string name)
		{
			this.Invoke("RenameTable", new object[] {
						database,
						table,
						name});
		}

		/// <remarks/>
		public System.IAsyncResult BeginRenameTable(string database, string table, string name, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RenameTable", new object[] {
						database,
						table,
						name}, callback, asyncState);
		}

		/// <remarks/>
		public void EndRenameTable(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void RenameTableAsync(string database, string table, string name)
		{
			this.RenameTableAsync(database, table, name, null);
		}

		/// <remarks/>
		public void RenameTableAsync(string database, string table, string name, object userState)
		{
			if ((this.RenameTableOperationCompleted == null))
			{
				this.RenameTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameTableOperationCompleted);
			}
			this.InvokeAsync("RenameTable", new object[] {
						database,
						table,
						name}, this.RenameTableOperationCompleted, userState);
		}

		private void OnRenameTableOperationCompleted(object arg)
		{
			if ((this.RenameTableCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.RenameTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SetValue", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void SetValue(string database, string table, string column, int row, string value)
		{
			this.Invoke("SetValue", new object[] {
						database,
						table,
						column,
						row,
						value});
		}

		/// <remarks/>
		public System.IAsyncResult BeginSetValue(string database, string table, string column, int row, string value, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("SetValue", new object[] {
						database,
						table,
						column,
						row,
						value}, callback, asyncState);
		}

		/// <remarks/>
		public void EndSetValue(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void SetValueAsync(string database, string table, string column, int row, string value)
		{
			this.SetValueAsync(database, table, column, row, value, null);
		}

		/// <remarks/>
		public void SetValueAsync(string database, string table, string column, int row, string value, object userState)
		{
			if ((this.SetValueOperationCompleted == null))
			{
				this.SetValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetValueOperationCompleted);
			}
			this.InvokeAsync("SetValue", new object[] {
						database,
						table,
						column,
						row,
						value}, this.SetValueOperationCompleted, userState);
		}

		private void OnSetValueOperationCompleted(object arg)
		{
			if ((this.SetValueCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.SetValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetDatabases", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
		public KeyValuePairOfStringDatabaseData[] GetDatabases()
		{
			object[] results = this.Invoke("GetDatabases", new object[0]);
			return ((KeyValuePairOfStringDatabaseData[])(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetDatabases(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetDatabases", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public KeyValuePairOfStringDatabaseData[] EndGetDatabases(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((KeyValuePairOfStringDatabaseData[])(results[0]));
		}

		/// <remarks/>
		public void GetDatabasesAsync()
		{
			this.GetDatabasesAsync(null);
		}

		/// <remarks/>
		public void GetDatabasesAsync(object userState)
		{
			if ((this.GetDatabasesOperationCompleted == null))
			{
				this.GetDatabasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabasesOperationCompleted);
			}
			this.InvokeAsync("GetDatabases", new object[0], this.GetDatabasesOperationCompleted, userState);
		}

		private void OnGetDatabasesOperationCompleted(object arg)
		{
			if ((this.GetDatabasesCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetDatabasesCompleted(this, new GetDatabasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetTables", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
		public KeyValuePairOfStringTableData[] GetTables(string database)
		{
			object[] results = this.Invoke("GetTables", new object[] {
						database});
			return ((KeyValuePairOfStringTableData[])(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetTables(string database, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetTables", new object[] {
						database}, callback, asyncState);
		}

		/// <remarks/>
		public KeyValuePairOfStringTableData[] EndGetTables(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((KeyValuePairOfStringTableData[])(results[0]));
		}

		/// <remarks/>
		public void GetTablesAsync(string database)
		{
			this.GetTablesAsync(database, null);
		}

		/// <remarks/>
		public void GetTablesAsync(string database, object userState)
		{
			if ((this.GetTablesOperationCompleted == null))
			{
				this.GetTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTablesOperationCompleted);
			}
			this.InvokeAsync("GetTables", new object[] {
						database}, this.GetTablesOperationCompleted, userState);
		}

		private void OnGetTablesOperationCompleted(object arg)
		{
			if ((this.GetTablesCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetTablesCompleted(this, new GetTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetColumns", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
		public KeyValuePairOfStringColumn[] GetColumns(string database, string table)
		{
			object[] results = this.Invoke("GetColumns", new object[] {
						database,
						table});
			return ((KeyValuePairOfStringColumn[])(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetColumns(string database, string table, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetColumns", new object[] {
						database,
						table}, callback, asyncState);
		}

		/// <remarks/>
		public KeyValuePairOfStringColumn[] EndGetColumns(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((KeyValuePairOfStringColumn[])(results[0]));
		}

		/// <remarks/>
		public void GetColumnsAsync(string database, string table)
		{
			this.GetColumnsAsync(database, table, null);
		}

		/// <remarks/>
		public void GetColumnsAsync(string database, string table, object userState)
		{
			if ((this.GetColumnsOperationCompleted == null))
			{
				this.GetColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnsOperationCompleted);
			}
			this.InvokeAsync("GetColumns", new object[] {
						database,
						table}, this.GetColumnsOperationCompleted, userState);
		}

		private void OnGetColumnsOperationCompleted(object arg)
		{
			if ((this.GetColumnsCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetColumnsCompleted(this, new GetColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DeleteDatabase", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteDatabase(string database)
		{
			this.Invoke("DeleteDatabase", new object[] {
						database});
		}

		/// <remarks/>
		public System.IAsyncResult BeginDeleteDatabase(string database, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("DeleteDatabase", new object[] {
						database}, callback, asyncState);
		}

		/// <remarks/>
		public void EndDeleteDatabase(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void DeleteDatabaseAsync(string database)
		{
			this.DeleteDatabaseAsync(database, null);
		}

		/// <remarks/>
		public void DeleteDatabaseAsync(string database, object userState)
		{
			if ((this.DeleteDatabaseOperationCompleted == null))
			{
				this.DeleteDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDatabaseOperationCompleted);
			}
			this.InvokeAsync("DeleteDatabase", new object[] {
						database}, this.DeleteDatabaseOperationCompleted, userState);
		}

		private void OnDeleteDatabaseOperationCompleted(object arg)
		{
			if ((this.DeleteDatabaseCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.DeleteDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DeleteTable", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteTable(string database, string table)
		{
			this.Invoke("DeleteTable", new object[] {
						database,
						table});
		}

		/// <remarks/>
		public System.IAsyncResult BeginDeleteTable(string database, string table, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("DeleteTable", new object[] {
						database,
						table}, callback, asyncState);
		}

		/// <remarks/>
		public void EndDeleteTable(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void DeleteTableAsync(string database, string table)
		{
			this.DeleteTableAsync(database, table, null);
		}

		/// <remarks/>
		public void DeleteTableAsync(string database, string table, object userState)
		{
			if ((this.DeleteTableOperationCompleted == null))
			{
				this.DeleteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTableOperationCompleted);
			}
			this.InvokeAsync("DeleteTable", new object[] {
						database,
						table}, this.DeleteTableOperationCompleted, userState);
		}

		private void OnDeleteTableOperationCompleted(object arg)
		{
			if ((this.DeleteTableCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.DeleteTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DeleteColumn", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteColumn(string database, string table, string column)
		{
			this.Invoke("DeleteColumn", new object[] {
						database,
						table,
						column});
		}

		/// <remarks/>
		public System.IAsyncResult BeginDeleteColumn(string database, string table, string column, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("DeleteColumn", new object[] {
						database,
						table,
						column}, callback, asyncState);
		}

		/// <remarks/>
		public void EndDeleteColumn(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void DeleteColumnAsync(string database, string table, string column)
		{
			this.DeleteColumnAsync(database, table, column, null);
		}

		/// <remarks/>
		public void DeleteColumnAsync(string database, string table, string column, object userState)
		{
			if ((this.DeleteColumnOperationCompleted == null))
			{
				this.DeleteColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteColumnOperationCompleted);
			}
			this.InvokeAsync("DeleteColumn", new object[] {
						database,
						table,
						column}, this.DeleteColumnOperationCompleted, userState);
		}

		private void OnDeleteColumnOperationCompleted(object arg)
		{
			if ((this.DeleteColumnCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.DeleteColumnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/DeleteRow", RequestNamespace = "http://microsoft.com/webservices/", ResponseNamespace = "http://microsoft.com/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteRow(string database, string table, int row)
		{
			this.Invoke("DeleteRow", new object[] {
						database,
						table,
						row});
		}

		/// <remarks/>
		public System.IAsyncResult BeginDeleteRow(string database, string table, int row, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("DeleteRow", new object[] {
						database,
						table,
						row}, callback, asyncState);
		}

		/// <remarks/>
		public void EndDeleteRow(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void DeleteRowAsync(string database, string table, int row)
		{
			this.DeleteRowAsync(database, table, row, null);
		}

		/// <remarks/>
		public void DeleteRowAsync(string database, string table, int row, object userState)
		{
			if ((this.DeleteRowOperationCompleted == null))
			{
				this.DeleteRowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRowOperationCompleted);
			}
			this.InvokeAsync("DeleteRow", new object[] {
						database,
						table,
						row}, this.DeleteRowOperationCompleted, userState);
		}

		private void OnDeleteRowOperationCompleted(object arg)
		{
			if ((this.DeleteRowCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.DeleteRowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://microsoft.com/webservices/")]
	public partial class KeyValuePairOfStringDatabaseData
	{

		private string keyField;

		private DatabaseData valueField;

		/// <remarks/>
		public string Key
		{
			get
			{
				return this.keyField;
			}
			set
			{
				this.keyField = value;
			}
		}

		/// <remarks/>
		public DatabaseData Value
		{
			get
			{
				return this.valueField;
			}
			set
			{
				this.valueField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://microsoft.com/webservices/")]
	public partial class DatabaseData
	{

		private string nameField;

		private int tablesField;

		/// <remarks/>
		public string Name
		{
			get
			{
				return this.nameField;
			}
			set
			{
				this.nameField = value;
			}
		}

		/// <remarks/>
		public int Tables
		{
			get
			{
				return this.tablesField;
			}
			set
			{
				this.tablesField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://microsoft.com/webservices/")]
	public partial class Value
	{

		private string dataField;

		/// <remarks/>
		public string Data
		{
			get
			{
				return this.dataField;
			}
			set
			{
				this.dataField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://microsoft.com/webservices/")]
	public partial class Column
	{

		private string nameField;

		private string typeField;

		private Value[] valuesField;

		/// <remarks/>
		public string Name
		{
			get
			{
				return this.nameField;
			}
			set
			{
				this.nameField = value;
			}
		}

		/// <remarks/>
		public string Type
		{
			get
			{
				return this.typeField;
			}
			set
			{
				this.typeField = value;
			}
		}

		/// <remarks/>
		public Value[] Values
		{
			get
			{
				return this.valuesField;
			}
			set
			{
				this.valuesField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://microsoft.com/webservices/")]
	public partial class KeyValuePairOfStringColumn
	{

		private string keyField;

		private Column valueField;

		/// <remarks/>
		public string Key
		{
			get
			{
				return this.keyField;
			}
			set
			{
				this.keyField = value;
			}
		}

		/// <remarks/>
		public Column Value
		{
			get
			{
				return this.valueField;
			}
			set
			{
				this.valueField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://microsoft.com/webservices/")]
	public partial class TableData
	{

		private string nameField;

		private int columnsField;

		private int rowsField;

		/// <remarks/>
		public string Name
		{
			get
			{
				return this.nameField;
			}
			set
			{
				this.nameField = value;
			}
		}

		/// <remarks/>
		public int Columns
		{
			get
			{
				return this.columnsField;
			}
			set
			{
				this.columnsField = value;
			}
		}

		/// <remarks/>
		public int Rows
		{
			get
			{
				return this.rowsField;
			}
			set
			{
				this.rowsField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://microsoft.com/webservices/")]
	public partial class KeyValuePairOfStringTableData
	{

		private string keyField;

		private TableData valueField;

		/// <remarks/>
		public string Key
		{
			get
			{
				return this.keyField;
			}
			set
			{
				this.keyField = value;
			}
		}

		/// <remarks/>
		public TableData Value
		{
			get
			{
				return this.valueField;
			}
			set
			{
				this.valueField = value;
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void CreateDatabaseCompletedEventHandler(object sender, CreateDatabaseCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class CreateDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal CreateDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void CreateTableCompletedEventHandler(object sender, CreateTableCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class CreateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal CreateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void CreateTableDistinctCompletedEventHandler(object sender, CreateTableDistinctCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class CreateTableDistinctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal CreateTableDistinctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void CreateColumnCompletedEventHandler(object sender, CreateColumnCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class CreateColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal CreateColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void CreateRowCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void RenameDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void RenameTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void SetValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void GetDatabasesCompletedEventHandler(object sender, GetDatabasesCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetDatabasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetDatabasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public KeyValuePairOfStringDatabaseData[] Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((KeyValuePairOfStringDatabaseData[])(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void GetTablesCompletedEventHandler(object sender, GetTablesCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public KeyValuePairOfStringTableData[] Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((KeyValuePairOfStringTableData[])(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void GetColumnsCompletedEventHandler(object sender, GetColumnsCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public KeyValuePairOfStringColumn[] Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((KeyValuePairOfStringColumn[])(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void DeleteDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void DeleteTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void DeleteColumnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
	public delegate void DeleteRowCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
